PROJECTIONS_ID 
VERSION 7.0
TOTAL_PHASES 1
MACHINE netlrts-linux-x86_64
PROCESSORS 24
TOTAL_CHARES 49
TOTAL_EPS 174
TOTAL_MSGS 25
TOTAL_PSEUDOS 0
TOTAL_EVENTS 0
CHARE 0 dummy_thread_chare
CHARE 1 dummy_pack_chare
CHARE 2 dummy_unpack_chare
CHARE 3 SDAG
CHARE 4 null
CHARE 5 Chare
CHARE 6 Group
CHARE 7 FutureBOC
CHARE 8 FutureMain
CHARE 9 CkGroupInitCallback
CHARE 10 CkGroupReadyCallback
CHARE 11 CkReductionMgr
CHARE 12 CkNodeReductionMgr
CHARE 13 CkLocMgr
CHARE 14 CkArrayMap
CHARE 15 RRMap
CHARE 16 DefaultArrayMap
CHARE 17 FastArrayMap
CHARE 18 HilbertArrayMap
CHARE 19 ReadFileMap
CHARE 20 BlockMap
CHARE 21 CldMap
CHARE 22 ConfigurableRRMap
CHARE 23 PropMap
CHARE 24 CkMapsInit
CHARE 25 CkArrayReductionMgr
CHARE 26 CkArray
CHARE 27 ArrayElement
CHARE 28 BaseLB
CHARE 29 NullLB
CHARE 30 LBDBInit
CHARE 31 LBDatabase
CHARE 32 MetaLBInit
CHARE 33 MetaBalancer
CHARE 34 MetaBalancerRedn
CHARE 35 ckcallback_main
CHARE 36 ckcallback_group
CHARE 37 TempoChare
CHARE 38 TempoGroup
CHARE 39 TempoArray
CHARE 40 waitqd_QDChare
CHARE 41 CkCheckpointMgr
CHARE 42 CkCheckpointInit
CHARE 43 Master
CHARE 44 Cache
CHARE 45 Slave
CHARE 46 TraceProjectionsInit
CHARE 47 KMeansBOC
CHARE 48 TraceProjectionsBOC
ENTRY CHARE 0 dummy_thread_ep 0 0
ENTRY CHARE 1 dummy_pack_ep 1 1
ENTRY CHARE 2 dummy_unpack_ep 2 2
ENTRY CHARE 3 SDAG_RTS 3 3
ENTRY CHARE 4 null 0 0
ENTRY CHARE 5 FutureBOC(FutureInitMsg* impl_msg) 7 6
ENTRY CHARE 6 SetFuture(FutureInitMsg* impl_msg) 7 6
ENTRY CHARE 7 SetSema(FutureInitMsg* impl_msg) 7 6
ENTRY CHARE 8 FutureBOC(CkMigrateMessage* impl_msg) 7 0
ENTRY CHARE 9 FutureMain(CkArgMsg* impl_msg) 8 0
ENTRY CHARE 10 CkGroupInitCallback(void) 9 0
ENTRY CHARE 11 callMeBack(CkGroupCallbackMsg* impl_msg) 9 7
ENTRY CHARE 12 CkGroupInitCallback(CkMigrateMessage* impl_msg) 9 0
ENTRY CHARE 13 CkGroupReadyCallback(void) 10 0
ENTRY CHARE 14 callMeBack(CkGroupCallbackMsg* impl_msg) 10 7
ENTRY CHARE 15 CkGroupReadyCallback(CkMigrateMessage* impl_msg) 10 0
ENTRY CHARE 16 CkReductionMgr(const CProxy_CkArrayReductionMgr &impl_noname_0) 11 0
ENTRY CHARE 17 RecvMsg(CkReductionMsg* impl_msg) 11 8
ENTRY CHARE 18 ReductionStarting(CkReductionNumberMsg* impl_msg) 11 9
ENTRY CHARE 19 LateMigrantMsg(CkReductionMsg* impl_msg) 11 8
ENTRY CHARE 20 MigrantDied(CkReductionNumberMsg* impl_msg) 11 9
ENTRY CHARE 21 Barrier_RecvMsg(CkReductionMsg* impl_msg) 11 8
ENTRY CHARE 22 ArrayReductionHandler(CkReductionMsg* impl_msg) 11 8
ENTRY CHARE 23 contributeViaMessage(CkReductionMsg* impl_msg) 11 8
ENTRY CHARE 24 AddToInactiveList(CkReductionInactiveMsg* impl_msg) 11 10
ENTRY CHARE 25 CkReductionMgr(CkMigrateMessage* impl_msg) 11 0
ENTRY CHARE 26 CkNodeReductionMgr(void) 12 0
ENTRY CHARE 27 ReductionStarting(CkReductionNumberMsg* impl_msg) 12 9
ENTRY CHARE 28 RecvMsg(CkReductionMsg* impl_msg) 12 8
ENTRY CHARE 29 restartLocalGroupReductions(int number) 12 0
ENTRY CHARE 30 DeleteChild(int child) 12 0
ENTRY CHARE 31 DeleteNewChild(int child) 12 0
ENTRY CHARE 32 modifyTree(int code, int size, const int *data) 12 0
ENTRY CHARE 33 collectMaxRedNo(int redNo) 12 0
ENTRY CHARE 34 unblockNode(int maxRedNo) 12 0
ENTRY CHARE 35 CkLocMgr(const CkArrayOptions &opts) 13 11
ENTRY CHARE 36 immigrate(CkArrayElementMigrateMessage* impl_msg) 13 12
ENTRY CHARE 37 requestLocation(const CkArrayIndex &idx, int peToTell, const bool &suppressIfHere, int ifNonExistent, int chareType, const CkArrayID &mgr) 13 11
ENTRY CHARE 38 requestLocation(const CmiUInt8 &id, int peToTell, const bool &suppressIfHere) 13 11
ENTRY CHARE 39 updateLocation(const CkArrayIndex &idx, const CmiUInt8 &id, int nowOnPe) 13 11
ENTRY CHARE 40 updateLocation(const CmiUInt8 &id, int nowOnPe) 13 11
ENTRY CHARE 41 reclaimRemote(const CkArrayIndex &idx, int deletedOnPe) 13 11
ENTRY CHARE 42 dummyAtSync(void) 13 0
ENTRY CHARE 43 CkLocMgr(CkMigrateMessage* impl_msg) 13 0
ENTRY CHARE 44 RRMap(void) 15 0
ENTRY CHARE 45 RRMap(CkMigrateMessage* impl_msg) 15 0
ENTRY CHARE 46 DefaultArrayMap(void) 16 0
ENTRY CHARE 47 DefaultArrayMap(CkMigrateMessage* impl_msg) 16 0
ENTRY CHARE 48 FastArrayMap(void) 17 0
ENTRY CHARE 49 FastArrayMap(CkMigrateMessage* impl_msg) 17 0
ENTRY CHARE 50 HilbertArrayMap(void) 18 0
ENTRY CHARE 51 HilbertArrayMap(CkMigrateMessage* impl_msg) 18 0
ENTRY CHARE 52 ReadFileMap(void) 19 0
ENTRY CHARE 53 ReadFileMap(CkMigrateMessage* impl_msg) 19 0
ENTRY CHARE 54 BlockMap(void) 20 0
ENTRY CHARE 55 BlockMap(CkMigrateMessage* impl_msg) 20 0
ENTRY CHARE 56 CldMap(void) 21 0
ENTRY CHARE 57 CldMap(CkMigrateMessage* impl_msg) 21 0
ENTRY CHARE 58 ConfigurableRRMap(void) 22 0
ENTRY CHARE 59 ConfigurableRRMap(CkMigrateMessage* impl_msg) 22 0
ENTRY CHARE 60 PropMap(void) 23 0
ENTRY CHARE 61 PropMap(CkMigrateMessage* impl_msg) 23 0
ENTRY CHARE 62 CkMapsInit(CkArgMsg* impl_msg) 24 0
ENTRY CHARE 63 CkArrayReductionMgr(void) 25 0
ENTRY CHARE 64 CkArrayReductionMgr(int dummy, const CkGroupID &gid) 25 11
ENTRY CHARE 65 setAttachedGroup(const CkGroupID &groupID) 25 11
ENTRY CHARE 66 CkArrayReductionMgr(CkMigrateMessage* impl_msg) 25 0
ENTRY CHARE 67 CkArray(const CkArrayOptions &opts, const CkMarshalledMessage &ctorMsg, const CkNodeGroupID &nodereductionProxy) 26 11
ENTRY CHARE 68 insertElement(const CkMarshalledMessage &impl_noname_0, const CkArrayIndex &impl_noname_1, const int *listenerData) 26 11
ENTRY CHARE 69 remoteBeginInserting(void) 26 0
ENTRY CHARE 70 remoteDoneInserting(void) 26 0
ENTRY CHARE 71 sendBroadcast(CkMessage* impl_msg) 26 -1
ENTRY CHARE 72 recvBroadcast(CkMessage* impl_msg) 26 -1
ENTRY CHARE 73 recvBroadcastViaTree(CkMessage* impl_msg) 26 -1
ENTRY CHARE 74 sendExpeditedBroadcast(CkMessage* impl_msg) 26 -1
ENTRY CHARE 75 recvExpeditedBroadcast(CkMessage* impl_msg) 26 -1
ENTRY CHARE 76 ckDestroy(void) 26 0
ENTRY CHARE 77 CkArray(CkMigrateMessage* impl_msg) 26 0
ENTRY CHARE 78 ArrayElement(void) 27 0
ENTRY CHARE 79 ckDestroy(void) 27 0
ENTRY CHARE 80 recvBroadcast(CkMessage* impl_msg) 27 -1
ENTRY CHARE 81 inmem_checkpoint(CkArrayCheckPTReqMessage* impl_msg) 27 0
ENTRY CHARE 82 defrag(CkReductionMsg* impl_msg) 27 8
ENTRY CHARE 83 ArrayElement(CkMigrateMessage* impl_msg) 27 0
ENTRY CHARE 84 BaseLB(const CkLBOptions &impl_noname_0) 28 11
ENTRY CHARE 85 unregister(void) 28 0
ENTRY CHARE 86 BaseLB(CkMigrateMessage* impl_msg) 28 0
ENTRY CHARE 87 NullLB(const CkLBOptions &impl_noname_0) 29 11
ENTRY CHARE 88 migrationsDone(void) 29 0
ENTRY CHARE 89 NullLB(CkMigrateMessage* impl_msg) 29 0
ENTRY CHARE 90 LBDBInit(CkArgMsg* impl_msg) 30 0
ENTRY CHARE 91 LBDatabase(void) 31 0
ENTRY CHARE 92 ResumeClients(void) 31 0
ENTRY CHARE 93 LBDatabase(CkMigrateMessage* impl_msg) 31 0
ENTRY CHARE 94 MetaLBInit(CkArgMsg* impl_msg) 32 0
ENTRY CHARE 95 MetaBalancer(void) 33 0
ENTRY CHARE 96 ReceiveMinStats(CkReductionMsg* impl_msg) 33 8
ENTRY CHARE 97 LoadBalanceDecision(int req_no, int period) 33 11
ENTRY CHARE 98 LoadBalanceDecisionFinal(int req_no, int period) 33 11
ENTRY CHARE 99 ReceiveIterationNo(int impl_noname_0) 33 11
ENTRY CHARE 100 RegisterNoObjCallback(int impl_noname_1) 33 11
ENTRY CHARE 101 TriggerAdaptiveReduction(void) 33 0
ENTRY CHARE 102 MetaLBCallLBOnChares(void) 33 0
ENTRY CHARE 103 MetaBalancer(CkMigrateMessage* impl_msg) 33 0
ENTRY CHARE 104 MetaBalancerRedn(void) 34 0
ENTRY CHARE 105 ReceiveIterNo(int max_iter) 34 11
ENTRY CHARE 106 redn_wrapper_ReceiveIterNo(CkReductionMsg *impl_msg) 34 11
ENTRY CHARE 107 getMaxIter(int impl_noname_2) 34 11
ENTRY CHARE 108 MetaBalancerRedn(CkMigrateMessage* impl_msg) 34 0
ENTRY CHARE 109 ckcallback_main(CkArgMsg* impl_msg) 35 0
ENTRY CHARE 110 ckcallback_group(void) 36 0
ENTRY CHARE 111 registerCcsCallback(const char *name, const CkCallback &cb) 36 11
ENTRY CHARE 112 call(const CkCallback &c, const CkMarshalledMessage &msg) 36 11
ENTRY CHARE 113 ckcallback_group(CkMigrateMessage* impl_msg) 36 0
ENTRY CHARE 114 TempoChare(void) 37 0
ENTRY CHARE 115 tempoGeneric(TempoMessage* impl_msg) 37 20
ENTRY CHARE 116 TempoGroup(void) 38 0
ENTRY CHARE 117 tempoGeneric(TempoMessage* impl_msg) 38 20
ENTRY CHARE 118 TempoGroup(CkMigrateMessage* impl_msg) 38 0
ENTRY CHARE 119 TempoArray(void) 39 0
ENTRY CHARE 120 tempoGeneric(TempoMessage* impl_msg) 39 20
ENTRY CHARE 121 TempoArray(CkMigrateMessage* impl_msg) 39 0
ENTRY CHARE 122 waitqd_QDChare(CkArgMsg* impl_msg) 40 0
ENTRY CHARE 123 waitQD(void) 40 0
ENTRY CHARE 124 onQD(CkQdMsg* impl_msg) 40 5
ENTRY CHARE 125 waitqd_QDChare(CkMigrateMessage* impl_msg) 40 0
ENTRY CHARE 126 CkCheckpointMgr(void) 41 0
ENTRY CHARE 127 Checkpoint(const char *dirname, const CkCallback &cb, const bool &requestStatus) 41 11
ENTRY CHARE 128 SendRestartCB(void) 41 0
ENTRY CHARE 129 redn_wrapper_SendRestartCB(CkReductionMsg *impl_msg) 41 8
ENTRY CHARE 130 CkCheckpointMgr(CkMigrateMessage* impl_msg) 41 0
ENTRY CHARE 131 CkCheckpointInit(CkArgMsg* impl_msg) 42 0
ENTRY CHARE 132 Master(CkArgMsg* impl_msg) 43 0
ENTRY CHARE 133 groupCreated(CkReductionMsg* impl_msg) 43 8
ENTRY CHARE 134 redn_wrapper_groupCreated(CkReductionMsg *impl_msg) 43 8
ENTRY CHARE 135 updateOFUB(double ofub, int size, const double *solution) 43 11
ENTRY CHARE 136 done(void) 43 0
ENTRY CHARE 137 getStat(CkReductionMsg* impl_msg) 43 8
ENTRY CHARE 138 redn_wrapper_getStat(CkReductionMsg *impl_msg) 43 8
ENTRY CHARE 139 Cache(double ofub) 44 11
ENTRY CHARE 140 updateOFUB(double ofub) 44 11
ENTRY CHARE 141 postConstraint(const set<constraint_t > &constraints) 44 11
ENTRY CHARE 142 postFinishedConstraint(const constraint_set_t &constraints) 44 11
ENTRY CHARE 143 postDroppedConstraint(const set<constraint_set_t > &constraints) 44 11
ENTRY CHARE 144 reportStat(void) 44 0
ENTRY CHARE 145 Slave(double parent_cost, const constraint_t &constraints, int branch_col) 45 11
ENTRY CHARE 146 TraceProjectionsInit(CkArgMsg* impl_msg) 46 0
ENTRY CHARE 147 KMeansBOC(const bool &impl_noname_0, int impl_noname_1, int impl_noname_2, double impl_noname_3, const bool &impl_noname_4) 47 11
ENTRY CHARE 148 startKMeansAnalysis(void) 47 0
ENTRY CHARE 149 flushCheck(CkReductionMsg* impl_msg) 47 8
ENTRY CHARE 150 flushCheckDone(void) 47 0
ENTRY CHARE 151 getNextPhaseMetrics(void) 47 0
ENTRY CHARE 152 globalMetricRefinement(CkReductionMsg* impl_msg) 47 8
ENTRY CHARE 153 findInitialClusters(KMeansStatsMessage* impl_msg) 47 22
ENTRY CHARE 154 updateKSeeds(CkReductionMsg* impl_msg) 47 8
ENTRY CHARE 155 updateSeedMembership(KSeedsMessage* impl_msg) 47 23
ENTRY CHARE 156 collectDistances(KSelectionMessage* impl_msg) 47 24
ENTRY CHARE 157 findNextMinMax(CkReductionMsg* impl_msg) 47 8
ENTRY CHARE 158 phaseDone(void) 47 0
ENTRY CHARE 159 KMeansBOC(CkMigrateMessage* impl_msg) 47 0
ENTRY CHARE 160 TraceProjectionsBOC(const bool &impl_noname_5, const bool &impl_noname_6) 48 11
ENTRY CHARE 161 traceProjectionsParallelShutdown(int impl_noname_7) 48 11
ENTRY CHARE 162 startTimeAnalysis(void) 48 0
ENTRY CHARE 163 startTimeDone(CkReductionMsg* impl_msg) 48 8
ENTRY CHARE 164 startEndTimeAnalysis(void) 48 0
ENTRY CHARE 165 endTimeDone(CkReductionMsg* impl_msg) 48 8
ENTRY CHARE 166 kMeansDone(void) 48 0
ENTRY CHARE 167 kMeansDone(CkReductionMsg* impl_msg) 48 8
ENTRY CHARE 168 finalize(void) 48 0
ENTRY CHARE 169 closingTraces(void) 48 0
ENTRY CHARE 170 closeParallelShutdown(void) 48 0
ENTRY CHARE 171 redn_wrapper_closeParallelShutdown(CkReductionMsg *impl_msg) 48 8
ENTRY CHARE 172 flush_warning(int pe) 48 11
ENTRY CHARE 173 TraceProjectionsBOC(CkMigrateMessage* impl_msg) 48 0
MESSAGE 0 0
MESSAGE 1 0
MESSAGE 2 0
MESSAGE 3 0
MESSAGE 4 4
MESSAGE 5 1
MESSAGE 6 4
MESSAGE 7 16
MESSAGE 8 272
MESSAGE 9 4
MESSAGE 10 8
MESSAGE 11 8
MESSAGE 12 48
MESSAGE 13 296
MESSAGE 14 4
MESSAGE 15 40
MESSAGE 16 32
MESSAGE 17 16
MESSAGE 18 24
MESSAGE 19 24
MESSAGE 20 24
MESSAGE 21 4
MESSAGE 22 40
MESSAGE 23 16
MESSAGE 24 24
TOTAL_STATS 0
TOTAL_FUNCTIONS 0 
END
