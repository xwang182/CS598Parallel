
mainmodule ilp {
  readonly CProxy_Master mainProxy;
  readonly CProxy_Cache cacheProxy;
  readonly map_t problem;
  readonly distance_t dist;
  readonly idx_map_t variable_map;
  readonly double_vec_t objective_vec;
  readonly double_vec_t col_lb_vec;
  readonly double_vec_t col_ub_vec;
  readonly constraint_vec_t constraint_vec;
  readonly int n_cols;

  mainchare Master {
    entry Master(CkArgMsg* msg);
    entry [reductiontarget] void groupCreated(CkReductionMsg *msg);
    entry [expedited] void updateOFUB(double ofub, int size, const double solution[size]);
    entry void done();
  };

  nodegroup Cache {
    entry Cache(double ofub);
    entry [expedited] void updateOFUB(double ofub);
  }

  chare Slave {
    entry Slave(double parent_cost, int_vec_t idx_vec, double_vec_t val_vec, idx_map_t subtour_vec);

  };
};
